#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
#repo --name=xs-extra --baseurl=http://download.unleashkids.org/xsce/repos/xs-extra
#repo --name=xsce-extra --baseurl=http://download.unleashkids.org/xsce/repos/xsce-extra
#repo --name=xsce-testing --baseurl=http://download.unleashkids.org/xsce/repos/xsce/testing
#repo --name=local --baseurl=file:///opt/schoolserver/yum-packages/

%include fedora-live-base.ks
%include fedora-live-minimization.ks
part / --size 6144 --fstype ext4
services --enabled=NetworkManager,sshd --disabled=network
selinux --disabled
firewall --disabled
network --hostname=schoolserver --device=link
%packages
wget
git
ansible
python-pip
patch

# ansible issues
# https://fedorahosted.org/cloud/ticket/126
python2
python-dnf
libsemanage-python
libselinux-python
python-dnf
python-firewall

# dnf mirror updatea issues below
yum
yum-utils
createrepo
redhat-rpm-config
php-devel
pcre-devel
samba
libxml2-devel
npm

@basic-desktop
@networkmanager-submodules
#@xfce-desktop

# unlock default keyring. FIXME: Should probably be done in comps
gnome-keyring-pam
# Add some screensavers, people seem to like them
# Note that blank is still default.
#xscreensaver-extras

# save some space
#-gimp-help
#-desktop-backgrounds-basic
#-realmd                     # only seems to be used in GNOME
-PackageKit*                # we switched to yumex, so we don't need this
#-aspell-*                   # dictionaries are big
#-xfce4-sensors-plugin


%end

%post
# make kickstart see ansible
echo "path is $PATH"
export PATH=/usr/bin:/usr/sbin:/sbin:/bin:$PATH
echo "path is $PATH"

#enable updates-testing till the mirrors straighen out
#sed -i 's|enabled=0|enabled=1|' /etc/yum.repos.d/fedora-updates-testing.repo
sed -i 's|enabled=0|enabled=1|' /etc/yum.repos.d/fedora-updates.repo

# make the default install path
mkdir -p /opt/schoolserver
cd /opt/schoolserver

### release flow
#git clone --depth 1 --branch stable https://github.com/XSCE/xsce 
#cd xsce
#git branch <ver> 
#git checkout <ver> 
#git pull origin <ver>

### custom testing branch
git clone --depth 1 --branch master https://github.com/XSCE/xsce 
cd xsce
git checkout -b installer

cat > 0-once.diff << EOF
diff --git a/install-init.yml b/install-init.yml
index bf9d19e..88c7c61 100644
--- a/install-init.yml
+++ b/install-init.yml
@@ -8,13 +8,10 @@
   - vars/default_vars.yml
   - vars/local_vars.yml
 
+  roles:
+      - { role: 0-once, tags: ['once'] }
+
   tasks:
-  - name: Create /etc/xsce
-    file: path=/etc/xsce
-          owner=root
-          group=root
-          mode=0755
-          state=directory
 
   - name: See if default config_vars.yml exists
     stat: path=/etc/xsce/config_vars.yml
diff --git a/xsce-base.yml b/xsce-base.yml
index 22eedff..d95fdfd 100644
--- a/xsce-base.yml
+++ b/xsce-base.yml
@@ -8,7 +8,6 @@
   - /etc/xsce/config_vars.yml
 
   roles:
-      - { role: 0-once, tags: ['once','platform','base'] }
       - { role: 1-prep, tags: ['prep','platform','base'] }
       - { role: 2-common, tags: ['common','base'] }
       - { role: 3-base-server, tags: ['base'] }
diff --git a/xsce.yml b/xsce.yml
index 243e1b7..03f0598 100644
--- a/xsce.yml
+++ b/xsce.yml
@@ -8,7 +8,6 @@
   - /etc/xsce/config_vars.yml
 
   roles:
-      - { role: 0-once, tags: ['once','platform','base'] }
       - { role: 1-prep, tags: ['prep','platform','base'] }
       - { role: 2-common, tags: ['common','base'] }
       - { role: 3-base-server, tags: ['base'] }
EOF

patch -p 1 -i 0-once.diff
git commit -a -m "0-once"

cat > 2-common.diff << EOF
diff --git a/install-init.yml b/install-init.yml
index 64a89e4..97699e9 100644
--- a/install-init.yml
+++ b/install-init.yml
@@ -10,6 +10,7 @@
 
   roles:
       - { role: 0-once, tags: ['once'] }
+      - { role: 2-common, tags: ['common'] }
 
   tasks:
 
diff --git a/xsce-base.yml b/xsce-base.yml
index d95fdfd..b3496c9 100644
--- a/xsce-base.yml
+++ b/xsce-base.yml
@@ -9,5 +9,4 @@
 
   roles:
       - { role: 1-prep, tags: ['prep','platform','base'] }
-      - { role: 2-common, tags: ['common','base'] }
       - { role: 3-base-server, tags: ['base'] }
diff --git a/xsce.yml b/xsce.yml
index 03f0598..e6cd085 100644
--- a/xsce.yml
+++ b/xsce.yml
@@ -9,7 +9,6 @@
 
   roles:
       - { role: 1-prep, tags: ['prep','platform','base'] }
-      - { role: 2-common, tags: ['common','base'] }
       - { role: 3-base-server, tags: ['base'] }
       - { role: 4-server-options, tags: ['options'] }
       - { role: 5-xo-services, tags: ['xo-services'] }
diff --git a/roles/2-common/tasks/main.yml b/roles/2-common/tasks/main.yml
index 1b8242f..2a84649 100644
--- a/roles/2-common/tasks/main.yml
+++ b/roles/2-common/tasks/main.yml
@@ -1,7 +1,6 @@
 - include: prelim.yml
 
 - include: yum.yml
-  when: not no_network
   tags:
     - download
 
EOF

patch -p 1 -i 2-common.diff
git commit -a -m "2-common"

## set preload time options here

# Don't start services while in the chroot
# turn on and off what you want to preload for other than default
cat > /opt/schoolserver/xsce/vars/local_vars.yml << EOF
installing: True

dhcpd_install: True
named_install: True
dansguardian_install: True
squid_install: True
openvpn_install: True

postgresql_install: True
mysql_install: True

samba_install: True
authserver_install: True
usb_lib_install: True
ejabberd_install: True
idmgr_install: True
activity-server_install: True
elgg_install: True
owncloud_install: True
moodle_install: True
iiab_install: True
pathagar_install: True
rachel_install: True
kiwix_install: True
kalite_install: True
sugar_stats_install: True
ajenti_install: True
munin_install: True
monit_install: True
vnstat_install: True
awstats_install: True
xovis_install: True
teamviewer_install: False

wordpress_install: True

EOF

./runtags download,download2 | tee -a xsce-image.log

## set install time options here
#cat > no-admin.diff << EOF
#--- a/roles/xsce-admin/tasks/main.yml
#+++ b/roles/xsce-admin/tasks/main.yml
#@@ -1,6 +1,7 @@
# - include: admin-user.yml
#   tags:
#     - base
#+  when: not no_admin is defined
# 
# - include: access.yml
#   tags:
#--- a/roles/portal/tasks/main.yml
#+++ b/roles/portal/tasks/main.yml
#@@ -1,8 +1,8 @@
# - name: Create home for content on portal page
#   file: path={{ item }}
#         mode=0755
#-        owner=xsce-admin
#-        group=xsce-admin
#+        owner=apache
#+        group=apache
#         state=directory
#   with_items:
#     - /library/content
#EOF

#patch -p 1 -i no-admin.diff
#git commit -a -m "no-admin"

# Don't start services while in the chroot
cat > /opt/schoolserver/xsce/vars/local_vars.yml << EOF
installing: True
#no_admin: True
EOF

### prep the image
./install-console | tee -a xsce-kickstart.log

# get rid of custom local_vars
git reset --hard 
git checkout master

#disable updates-testing
sed -i 's|enabled=1|enabled=0|' /etc/yum.repos.d/fedora-updates-testing.repo

# run install-console on first boot
cat > /etc/rc.d/init.d/xsce-prep << EOF
#!/bin/bash
#
# xsce: Init script for xsce-prep
#
# chkconfig: 345 00 98

# description: Init script for XSCE prep.
### BEGIN INIT INFO
# X-Start-Before: display-manager
### END INIT INFO

. /etc/init.d/functions

### 
if [ -e /.xsce-booted ] ; then
    systemctl disable xsce-prep
    #/sbin/chkconfig --del xsce-prep
    #rm /etc/rc.d/init.d/xsce-prep
    exit 0
fi

# the vars/* are not found
cd /opt/schoolserver/xsce/

if [ -f  xsce-kickstart.log ] ; then
    result=\`cat xsce-kickstart.log | grep failed=0 | awk '{print \$6}' | wc -l\`
    if [ \$result -eq 1 ] ; then
        # ran to completion
        ./xsce-network > xsce-firstboot.log
        touch /.xsce-booted
        exit 0
    fi
fi
#./install-console > xsce-firstboot-full.log
touch /.xsce-booted2
exit 0

EOF

# now make xsce-prep active
chmod 755 /etc/rc.d/init.d/xsce-prep
chkconfig --add xsce-prep
systemctl enable xsce-prep
restorecon /etc/rc.d/init.d/xsce-prep

# not sure why anaconda service is running without intervention
#systemctl disable anaconda

cat > /usr/bin/xsceinst << FOE
#!/usr/bin/bash
#check if anaconda is running 
results=\`ps -a  | grep anaconda | awk '{print \$1}'\`
echo \$results > /root/anaconda-state
if ! [ x\$results = x ]; then
    systemctl stop anaconda
    kill -9 \$results > /dev/null
    anaconda-cleanup
fi
liveinst -G
FOE
chmod 755 /usr/bin/xsceinst

#### On the livecd runs anaconda on boot
### this file is a run once and tossed away after setup
cat > /etc/rc.d/init.d/xsce-installer << FOE
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 00 99
# description: Late init script for live image.

. /etc/init.d/functions

# disable and cleanup
if [ -e /.xsce-installed ] ; then
    systemctl disable xsce-installer
    /sbin/chkconfig --del xsce-installer
    #rm /etc/rc.d/init.d/xsce-installer
    #rm /.xsce-installed
    exit 0
fi

# set up lightdm autologin
sed -i 's/^#autologin-user=.*/autologin-user=liveuser/' /etc/lightdm/lightdm.conf
sed -i 's/^#autologin-user-timeout=.*/autologin-user-timeout=0/' /etc/lightdm/lightdm.conf

# set Xfce as default session, otherwise login will fail
sed -i 's/^#user-session=.*/user-session=xfce/' /etc/lightdm/lightdm.conf

# Show harddisk install on the desktop
sed -i -e 's/NoDisplay=true/NoDisplay=false/' /usr/share/applications/liveinst.desktop
mkdir /home/liveuser/Desktop
cp /usr/share/applications/liveinst.desktop /home/liveuser/Desktop

# and mark it as executable (new Xfce security feature)
chmod +x /home/liveuser/Desktop/liveinst.desktop

# this goes at the end after all other changes. 
chown -R liveuser:liveuser /home/liveuser
restorecon -R /home/liveuser

### Call the installer here we don't really have to check the cmdline
### textinst needs a compelte kickstart file, not there yet

plymouth --quit
/usr/bin/xsceinst
FOE

chmod 755 /etc/rc.d/init.d/xsce-installer
chkconfig --add xsce-installer
systemctl enable xsce-installer
restorecon /etc/rc.d/init.d/xsce-installer

# don't want to mess with bootloader files
# have to hijack anaconda's default kickstart file
ADDKS=/opt/schoolserver/xsce/installer/ks-scripts/demo.ks
TARGET=/usr/share/anaconda/interactive-defaults.ks
# could change to sed out firstboot 

sed -i '/systemctl enable xsce-prep/a systemctl disable xsce-installer' $ADDKS 

echo "%include $ADDKS" >> $TARGET

%end

%post --nochroot
cp `pwd`/ks.cfg $LIVE_ROOT/LiveOS
cp `pwd`/*.ks $LIVE_ROOT/LiveOS
cp `pwd`/mkiso* $LIVE_ROOT/LiveOS
%end
