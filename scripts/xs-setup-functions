#!/bin/bash +x
# collect here all the separate setup independent changes to stock XO software
#
# usage: source this file -- for example to install a WWW server:
"""
#!/bin/bash
#examble install script
. <diretory on path>/xs-setup-functions
do_first
httpd yes
do_last
"""

set -x -e -u

DESTDIR=""
CFGDIR=/usr/share/xs-config/cfg
MARKER=/.olpcxs-configured
LOG=/var/log/xs-setup.log
POSTGRESSDIR=/library/pgsql-xs

function manpages()
{
	case "$1" in
	"yes")
        set +e
		sed -s/%_excludedocs 1/%_excludedocs 0/ /etc/rpm/macros.imgcreate
        set -e
		yum install man-pages man-db man >> $LOG
        ;;
	"no")
        set +e
		sed -s/%_excludedocs 0/%_excludedocs 1/ /etc/rpm/macros.imgcreate
        set -e
		yum erase  man-pages man-db man >> $LOG
        rm -rf /usr/share/man
        ;;
	esac
}

function postgresql()
{
	case "$1" in
	"yes")
        yum install postgresql >> $LOG
		# Pg - prime the DB if needed.
		if [ ! -e ${POSTGRESSDIR}/PG_VERSION ];then
		   #/etc/init.d/pgsql-xs initdb -- this was used before systemd
			adduser postgres
            mkdir -p $POSTGRESSDIR
			/bin/chown postgres $POSTGRESSDIR
			/bin/su  -c "/bin/initdb -D $POSTGRESSDIR -E utf8" postgres
		fi

		# and set it to autostart
		systemctl enable postgresql.service >> $LOG
		;;
	"no")
		systemctl disable postgresql.service >> $LOG
        yum erase postgresql >> $LOG
		;;
	esac
}

function httpd()
{
	case "$1" in
	"yes")
		yum install httpd >> $LOG
        cp -p /etc/httpd/conf/httpd-xs.conf.in /etc/httpd/conf/httpd-xs.conf
		# Choose a config depending on memory
		MEMSIZE=$(grep '^MemTotal' /proc/meminfo | grep -oP '\d+')
		CONFMEM=256m
		# Note: the sizes are rounded to a lower value
		#       as they are usually reported a tad lower than the
		#       "proper" MB value in bytes (video cards often steal RAM!).
		if [ $MEMSIZE -gt  500000 ]; then
		    CONFMEM=512m
		fi
		if [ $MEMSIZE -gt 1000000 ]; then
		    CONFMEM=1024m
		fi
		if [ $MEMSIZE -gt 2000000 ]; then
		    CONFMEM=2048m
		fi
		#update the httpd.conf file with this information
		sed  's/@@CONFMEM@@/$CONFMEM/' /etc/httpd/conf/httpd-xs.conf
		etckeeper commit -m "modified /etc/httpd/conf/httpd-xs.conf"
		systemctl enable httpd.service >> $LOG
		;;
	"no")
		systemctl disable httpd.service >> $LOG
        yum erase httpd >> $LOG
		;;
	esac
}

function squid()
{
	case "$1" in
	"yes")
        yum install squid >> $LOG
        ## Update flag for httpd cache
        if [ ! -e /etc/sysconfig/xs_httpcache_on ]; then
           if chkconfig --level 3 squid ; then
              touch /etc/sysconfig/xs_httpcache_on
              etckeeper commit -m 'xs-setup force-create httpcache flag'
           fi
        fi
        systemctl enable squid.service >> $LOG
        #need to set up iptables to forward port 80 queries
        
        ;;
    "no")
        systemctl disable squid.service >> $LOG
        yum erase squid >> $LOG
        ;;
    esac
}

function moodle()
{
	case "$1" in
	"yes")
        yum install moodle >> $LOG
		systemctl enable moddle.service >> $LOG
        ;;
	"no")
		systemctl disable moddle.service >> $LOG
        yum erase moodle >> $LOG
        ;;
	esac
}

function moodle_xs()
{
	case "$1" in
	"yes")
        yum install moodle-xs >> $LOG
		systemctl enable moddle_xs.service >> $LOG
        ;;
	"no")
		systemctl disable moddle_xs.service >> $LOG
        yum erase moodle-xs >> $LOG
        ;;
	esac
}

function idmgr()
{
	case "$1" in
	"yes")
        yum install idmgr ds-backup xs-rsync  >> $LOG
		systemctl enable idmgr.service >> $LOG
        ;;
	"no")
		systemctl disable idmgr.service >> $LOG
        yum erase idmgr ds-backup xs-rsync  >> $LOG
        ;;
	esac
}

function vnc()
{
	case "$1" in
	"yes")
        yum install tigervnc-server >> $LOG
		systemctl enable vncserver\@.service >> $LOG
        ;;
	"no")
		systemctl disable vncserver\@.service >> $LOG
        yum erase tigervnc-server >> $LOG
        ;;
	esac
}
function avahi()
{
	case "$1" in
	"yes")
        yum install nss-mdns avahi avahi-tools avahi-ui >> $LOG
		systemctl enable avahi-daemon.service >> $LOG
        ;;
	"no")
		systemctl disable avahi-daemon.service >> $LOG
        #yum erase nss-mdns avahi avahi-tools avahi-ui
        ;;
	esac
}	

function named()
{
	case "$1" in
	"yes")
        yum install bind >> $LOG
		systemctl enable named.service >> $LOG
        ;;
	"no")
		systemctl disable named.service >> $LOG
        yum erase bind >> $LOG
        ;;
	esac
}
 
function dhcpd()
{
	case "$1" in
	"yes")
        yum install dhcp >> $LOG
		systemctl enable dhcpd.service >> $LOG
        ;;
	"no")
		systemctl disable dhcpd.service >> $LOG
        yum erase dhcp >> $LOG
        ;;
	esac
}

function xs-security()
{
    "yes")
        yum install  xs-tools olpc-bios-crypto bitfrost xs-activation >> $LOG
        ;;
    "no")
        yum erase   xs-tools olpc-bios-crypto bitfrost xs-activation >> $LOG
        ;;
}
function do_first()
{    
    #things to do the first time -- only once
    ## Prepare etckeeper database
    if [ ! -d /etc/.git ];then
        pushd /etc
        yum install etckeeper
        etckeeper init
        etckeeper commit -m "Initial checkin"
        git gc

        ###
        ### CLEANUP XS 0.4 to XS 0.5
        ###
        # Remove old configs that are unambiguously old
        OLDCONFIGS="/etc/sysconfig/network-scripts/ifcfg-dummy0
                    /etc/sysconfig/network-scripts/ifcfg-br0
                    /etc/sysconfig/network-scripts/ifcfg-br1
                    /etc/sysconfig/network-scripts/ifcfg-br2  "
        for FPATH in $OLDCONFIGS; do
            if [ -e "${DESTDIR}$FPATH" ];then
               rm -f "${DESTDIR}$FPATH"
            fi
            etckeeper commit -m 'Remove old conffiles'
        done
        # Remove ifcfg-ethX files that refer to libertas devices
        # these have been replaced with wmeshX devices
        for FPATH in ${DESTDIR}/etc/sysconfig/network-scripts/ifcfg-eth*; do
            # Here the implicit ls has incorporated $DESTDIR
            if grep -q '^ESSID=\"school-mesh-' "$FPATH" ;then
                rm -f "$FPATH"
            fi
            etckeeper commit -m 'Remove old libertas conffiles'
        done
        # remove eth1:1 if it's the 'school server master address'
        FPATH="${DESTDIR}/etc/sysconfig/network-scripts/ifcfg-eth1:1"
        if [ -e "$FPATH" ];then
            if grep -q '^IPADDR=172.18.1.1' "$FPATH" ;then
                rm -f "$FPATH"
                etckeeper commit -m 'Remove old conffile'
            fi
        fi
        
        ## Prepare config files
        CFG_TEMPLATES="rsyslog.conf motd sysctl.conf ssh/sshd_config yum.conf
        sysconfig/named sysconfig/init sysconfig/squid rssh.conf php.ini
        httpd/conf.d/proxy_ajp.conf httpd/conf.d/ssl.conf"
        
        for i in $CFG_TEMPLATES; do
            cp -p $i.in $i
        done

        # Load new sysctl.conf settings
        sysctl -p

        # Work would be needed to get the XS components playing nice with SELinux, so
        # disable it.
        if selinuxenabled; then
            setenforce 0
            sed -i -e 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config
        fi

        echo "-y" > $DESTDIR/fsckoptions
        ln -sf $CFGDIR/etc/dhcp/dhclient-exit-hooks $DESTDIR/etc/dhcp
        ln -sf $CFGDIR/etc/httpd/conf.d/*.conf $DESTDIR/etc/httpd/conf.d
        ln -sf $CFGDIR/etc/logrotate.d/* $DESTDIR/etc/logrotate.d
        ln -sf $CFGDIR/etc/usbmount/mount.d/* $DESTDIR/etc/usbmount/mount.d

        # sudo doesn't accept symlinks here
        install -m 440 $CFGDIR/etc/sudoers.d/* $DESTDIR/etc/sudoers.d
        
        # run setup scripts belonging to other packages
        shopt -s nullglob
        for i in /etc/sysconfig/olpc-scripts/setup.d/*; do
            [ -x $i ] && $i
        done
        shopt -u nullglob

        #this needs to be turned on first so that later installs save man pages
        manpages yes
        
        #XO release 12.1.0 makes /var/log  a tempfs -- server logs should persist
        set +e
        sed -c -i 's:varlog:#varlog:' /etc/fstab
        set -e    
        etckeeper commit -m "<xs.conf.in> files copied"
        
        #following packages are the core set of packages installed on all xs servers
        yum install  xs-activity-server \
            syck rssh mtd-utils module-init-tools \
            acpid xs-release usbmount  >> $LOG
        
        
        #may remove the following for production, but very useful during debug
        yum install mlocate >> $LOG
        updatedb
        
        etckeeper commit -m "after installing core packages"
        
        popd
    fi

    #gjh need to add "groupremove_leaf_only=1" to /etc/yum.conf (becomes yum.conf.in)
}

function do_last()
{
    etckeeper commit -m 'School Server setup changed - do_last'
    if [ ! -e $MARKER ]; then
        #internally we use /etc/.git as marker for first config run --
        #   --$ MARKER  is available externally
        touch $MARKER
        echo "XS configured; services will activate upon reboot."
    fi
}

#now source any files ending with .sh in config dir, allow pkgs to shadow these defs
for i in $CFGDIR/*.sh ; do
    if [ -r "$i" ]; then
            . "$i" >/dev/null 2>&1
            echo "shell script $i in $CFGDIR shadowed setup functions" >> $LOG
    fi
done
