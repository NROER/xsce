diff --git a/altfiles/etc/sysconfig/ip6tables-config.in b/altfiles/etc/sysconfig/ip6tables-config.in
index 7d858fb..55094fa 100644
--- a/altfiles/etc/sysconfig/ip6tables-config.in
+++ b/altfiles/etc/sysconfig/ip6tables-config.in
@@ -3,7 +3,7 @@
 ## This file has an ".in" template - for details see
 ##  see /usr/share/doc/xs-config-<version>/README 
 
-IP6TABLES_DATA=/etc/sysconfig/olpc-scripts/ip6tables-xs
+IP6TABLES_DATA=/etc/sysconfig/olpc-scripts/ip6tables
 xs-gen-iptables $IP6TABLES_DATA
 
 # Load additional ip6tables modules (nat helpers)
diff --git a/altfiles/etc/sysconfig/iptables-config.in b/altfiles/etc/sysconfig/iptables-config.in
index 1821c63..454bf20 100644
--- a/altfiles/etc/sysconfig/iptables-config.in
+++ b/altfiles/etc/sysconfig/iptables-config.in
@@ -3,10 +3,8 @@
 ## This file has an ".in" template - for details see
 ##  see /usr/share/doc/xs-config-<version>/README 
 
-IPTABLES_DATA=/etc/sysconfig/iptables
-#xs-gen-iptables $IPTABLES_DATA
-/etc/sysconfig/olpc-scripts/firewall-xs
-iptables-save > $IPTABLES_DATA
+IPTABLES_DATA=/etc/sysconfig/olpc-scripts/iptables
+xs-gen-iptables $IPTABLES_DATA
 
 # Load additional iptables modules (nat helpers)
 #   Default: -none-
diff --git a/altfiles/etc/sysconfig/olpc-scripts/ip6tables-xs.in b/altfiles/etc/sysconfig/olpc-scripts/ip6tables-xs.in
deleted file mode 100644
index be1fd05..0000000
--- a/altfiles/etc/sysconfig/olpc-scripts/ip6tables-xs.in
+++ /dev/null
@@ -1,14 +0,0 @@
-# Simple XS IPv6 firewall config, to be extended later when IPv6 configuration
-# has been more thoroughly designed and reviewed.
-*filter
-:INPUT ACCEPT [0:0]
-:FORWARD ACCEPT [0:0]
-:OUTPUT ACCEPT [0:0]
--A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
--A INPUT -p ipv6-icmp -j ACCEPT
--A INPUT -i lo -j ACCEPT
--A INPUT -i @@LAN@@ -j ACCEPT
--A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
--A INPUT -j REJECT --reject-with icmp6-adm-prohibited
--A FORWARD -j REJECT --reject-with icmp6-adm-prohibited
-COMMIT
diff --git a/altfiles/etc/sysconfig/olpc-scripts/ip6tables.in b/altfiles/etc/sysconfig/olpc-scripts/ip6tables.in
new file mode 100644
index 0000000..df7daf5
--- /dev/null
+++ b/altfiles/etc/sysconfig/olpc-scripts/ip6tables.in
@@ -0,0 +1,14 @@
+# Simple XS IPv6 firewall config, to be extended later when IPv6 configuration
+# has been more thoroughly designed and reviewed.
+*filter
+:INPUT ACCEPT [0:0]
+:FORWARD ACCEPT [0:0]
+:OUTPUT ACCEPT [0:0]
+-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
+-A INPUT -p ipv6-icmp -j ACCEPT
+-A INPUT -i lo -j ACCEPT
+-A INPUT ! -i  @@WAN@@ -j ACCEPT
+-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
+-A INPUT -j REJECT --reject-with icmp6-adm-prohibited
+-A FORWARD -j REJECT --reject-with icmp6-adm-prohibited
+COMMIT
diff --git a/altfiles/etc/sysconfig/olpc-scripts/iptables-xs.in b/altfiles/etc/sysconfig/olpc-scripts/iptables-xs.in
deleted file mode 100644
index 28ce9c7..0000000
--- a/altfiles/etc/sysconfig/olpc-scripts/iptables-xs.in
+++ /dev/null
@@ -1,31 +0,0 @@
-*nat
-:PREROUTING ACCEPT [0:0]
-:POSTROUTING ACCEPT [0:0]
-:OUTPUT ACCEPT [0:0]
-@@SQUID@@
--A POSTROUTING -o @@WAN@@ -j MASQUERADE
-COMMIT
-*filter
-:INPUT ACCEPT [0:0]
-:FORWARD ACCEPT [0:0]
-:OUTPUT ACCEPT [0:0]
--A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
--A INPUT -p icmp -j ACCEPT
--A INPUT -i lo -j ACCEPT
-
-# Allow ssh access on all interfaces
--A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-
-# Allow all LAN services
--A INPUT ! -i @@WAN@@ -m state --state NEW -j ACCEPT
-
-# NAT is allowed
--A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
--A FORWARD -p icmp -j ACCEPT
--A FORWARD -i lo -j ACCEPT
--A FORWARD -o @@WAN@@ -j ACCEPT
-
-# Reject everything else
--A INPUT -j REJECT --reject-with icmp-host-prohibited
--A FORWARD -j REJECT --reject-with icmp-host-prohibited
-COMMIT
diff --git a/altfiles/etc/sysconfig/olpc-scripts/iptables.in b/altfiles/etc/sysconfig/olpc-scripts/iptables.in
new file mode 100644
index 0000000..28ce9c7
--- /dev/null
+++ b/altfiles/etc/sysconfig/olpc-scripts/iptables.in
@@ -0,0 +1,31 @@
+*nat
+:PREROUTING ACCEPT [0:0]
+:POSTROUTING ACCEPT [0:0]
+:OUTPUT ACCEPT [0:0]
+@@SQUID@@
+-A POSTROUTING -o @@WAN@@ -j MASQUERADE
+COMMIT
+*filter
+:INPUT ACCEPT [0:0]
+:FORWARD ACCEPT [0:0]
+:OUTPUT ACCEPT [0:0]
+-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
+-A INPUT -p icmp -j ACCEPT
+-A INPUT -i lo -j ACCEPT
+
+# Allow ssh access on all interfaces
+-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
+
+# Allow all LAN services
+-A INPUT ! -i @@WAN@@ -m state --state NEW -j ACCEPT
+
+# NAT is allowed
+-A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
+-A FORWARD -p icmp -j ACCEPT
+-A FORWARD -i lo -j ACCEPT
+-A FORWARD -o @@WAN@@ -j ACCEPT
+
+# Reject everything else
+-A INPUT -j REJECT --reject-with icmp-host-prohibited
+-A FORWARD -j REJECT --reject-with icmp-host-prohibited
+COMMIT
diff --git a/scripts/xs-gen-iptables b/scripts/xs-gen-iptables
index 44b70ec..8dd28be 100644
--- a/scripts/xs-gen-iptables
+++ b/scripts/xs-gen-iptables
@@ -13,8 +13,6 @@ import logging
 import sys
 import tempfile
 
-
-
 sysconfig_path = "/etc/sysconfig"
 
 if len(sys.argv) < 2:
@@ -22,10 +20,9 @@ if len(sys.argv) < 2:
      exit(1)
 
 # will try and update it atomically
-output_path = sys.argv[1]
+input_path = sys.argv[1]
 
 # default
-lan = 'eth0'
 wan = 'eth1'
 
 wanconf_path = os.path.join(sysconfig_path, 'xs_wan_device')
@@ -48,9 +45,9 @@ else:
 
 #print("wan="+wan+" squid=%i" % squid)
 
-template = open(output_path + ".in")
+template = open(input_path + ".in")
 # write it as a tmpfile in the destination directory, for an atomic update
-(destfh, tmpfile) = tempfile.mkstemp(dir=os.path.dirname(output_path))
+(destfh, tmpfile) = tempfile.mkstemp(dir=os.path.dirname(sysconfig_path))
 for line in template:
      if (re.match('@@SQUID@@', line)):
           if proxyison:
@@ -58,11 +55,10 @@ for line in template:
      else:
           # line = line.rstrip()
           line = re.sub(r'\@\@WAN\@\@', wan, line)
-          line = re.sub(r'\@\@LAN\@\@', lan, line)
           os.write(destfh, line)
 
 os.close(destfh)
 
 # update atomically
-os.rename(tmpfile, output_path)
+os.rename(tmpfile, sysconfig_path)
 
diff --git a/scripts/xs-setup b/scripts/xs-setup
index ed0ad72..b590789 100755
--- a/scripts/xs-setup
+++ b/scripts/xs-setup
@@ -54,10 +54,9 @@ source /usr/bin/xs-setup-functions
 
 # prep the XO
 do-first
-set-etckeeper yes
-yum-etckeeper yes
+#yum-etckeeper yes
 #turn off the etckeeper to speed things up
-yum-etckeeper no
+#yum-etckeeper no
 set-etckeeper no
 mlocate yes
 
@@ -73,12 +72,6 @@ moodle-xs yes
 xs-security yes
 webdav yes
 
-# for normal use, choose either of the following (gateway turns on masquerade)
-squid yes
-gateway yes
-dhcpd yes
-named yes
-
 # Finalize install
 yum-etckeeper yes
 do-last
diff --git a/scripts/xs-setup-functions b/scripts/xs-setup-functions
index 25ebf6a..aecd1aa 100755
--- a/scripts/xs-setup-functions
+++ b/scripts/xs-setup-functions
@@ -82,7 +82,7 @@ function dhcpd()
 
 function etckeeper-if-selected()
 {
-    if [ -e $SETUPSTATEDIR/etckeeper && $# -gt 1]; then
+    if [ -e $SETUPSTATEDIR/etckeeper && $# -gt 1 ]; then
         set +e
         etckeeper commit -m $2
         set -e
@@ -95,14 +95,14 @@ function set-etckeeper()
 	"yes")
         if [ ! -d /etc/.git ]; then
             pushd /etc
-            yum -y install etckeeper
-            if [ $? -ne 0 ] ; then
-                echo "\n\nYum returned an error\n\n" | tee -a $LOG
-                exit $YUMERROR
-            fi
+#            yum -y install etckeeper
+#            if [ $? -ne 0 ] ; then
+#                echo "\n\nYum returned an error\n\n" | tee -a $LOG
+#                exit $YUMERROR
+#            fi
             etckeeper init
-            etckeeper commit -m "Initial checkin"
-            git gc
+#            etckeeper commit -m "Initial checkin"
+#            git gc
             popd
         fi
 
@@ -143,17 +143,23 @@ function gateway()
 {
 	case "$1" in
 	"yes")
-        cp /etc/sysconfig/olpc-scripts/iptables-xs.in /etc/sysconfig/olpc-scripts/iptables-xs
-        cp /etc/sysconfig/olpc-scripts/ip6tables-xs.in /etc/sysconfig/olpc-scripts/ip6tables-xs
-        cp /etc/sysconfig/olpc-scripts/firewall-xs.in /etc/sysconfig/olpc-scripts/firewall-xs
+	CFG_TEMPLATES="sysconfig/iptables-config sysconfig/ip6tables-config"
+
+	for i in $CFG_TEMPLATES; do
+	    cp -p $i.in $i
+	    # etckeeper commit -m "Made from $i.in"
+	done
 
         # either enable the service or create the file not both
-        ln -sf $CFGDIR/etc/systemd/system/iptables.service $DESTDIR/etc/systemd/system
-        #systemctl enable iptables.service
 
+        ln -sf $CFGDIR/etc/systemd/system/iptables.service $DESTDIR/etc/systemd/system
+#	/etc/sysconfig/iptables-config
+        systemctl enable iptables.service
+	systemctl enable ip6tables.service
         systemctl start iptables.service
+	systemctl start ip6tables.service
         # systemd has a check for exist /etc/sysconfig/iptables - so ensure that it exists
-        /etc/sysconfig/iptables-config
+        
         touch $SETUPSTATEDIR/gateway
         ;;
 	"no")
@@ -453,12 +459,10 @@ function vnc()
         ln -sf $DESTDIR/etc/systemd/system/vncserver\@.service \
             $DESTDIR/etc/systemd/system/multi-user.target.wants/vncserver\@\:1.service
         cp $CFGDIR/etc/sysconfig/vnc/xstartup /home/$DEFAULTUSER/.vnc/
+        chown -R $DEFAULTUSER:$DEFAULTUSER /home/$DEFAULTUSER/.vnc
         echo "$DEFAULTPASSWORD" | vncpasswd -f > \
                     /home/$DEFAULTUSER/.vnc/passwd
-        chown -R $DEFAULTUSER:$DEFAULTUSER /home/$DEFAULTUSER/.vnc
         chmod 600 /home/$DEFAULTUSER/.vnc/passwd
-        cp /etc/pki/CA/newcerts/admin/self.pem /home/admin
-        chown $DEFAULTUSER:$DEFAULTUSER /home/admin/self.pem
 		systemctl enable vncserver\@\:1.service 2>&1 | tee -a $LOG
         systemctl start vncserver\@\:1.service 2>&1 | tee -a $LOG
         systemctl start vncserverweb.service 2>&1 | tee -a $LOG
diff --git a/scripts/xs-setup-network b/scripts/xs-setup-network
index 596118c..441d559 100755
--- a/scripts/xs-setup-network
+++ b/scripts/xs-setup-network
@@ -27,11 +27,20 @@ if [ -n "$opt_upgrade_only" ]; then
 	exit 0
 fi
 
-#etckeeper commit -m "Dirty state"
+# Determine the number of interfaces
+num_ifaces=`ls /sys/class/net | wc | gawk '{print $1}'`
+
+# Is this an XO
+is_xo=`[ -f /proc/device-tree/mfg-data/MN ] && echo 1 || echo 0`
+echo $is_xo
+
+CONFIG_LIST="/etc/hosts"
+
+pushd /etc
 
 #========================================================
+# Prepare config files
 #new code to use NetworkManager to set up devices
-
 function write_nm_connection(){
     # receives connection_filename, hwaddr,  device_name as parameters
     cp "/usr/share/xs-config/cfg/etc/NetworkManager/system-connections/$1" \
@@ -39,33 +48,33 @@ function write_nm_connection(){
     #removed -i to try to get rid of sed intermediate files 9/24/2012
     sed -i  "s/\@\@MAC\@\@/$2/" "/etc/NetworkManager/system-connections/$1"
     sed -i  "s/\@\@DEVICE\@\@/$3/" "/etc/NetworkManager/system-connections/$1"
+    etckeeper commit -m "Made network interface $@"
     chmod 600 "/etc/NetworkManager/system-connections/$1" 
 }
 
-# Determine the number of interfaces
-num_ifaces=`ls /sys/class/net | wc | gawk '{print $1}'`
-
-# Is this an XO
-is_xo=`[ -f /proc/device-tree/mfg-data/MN ] && echo 1 || echo 0`
-echo $is_xo
 # all xo's have a wifi and a lo interface
 if [[ $is_xo = "1" ]]; then
     num_ifaces=$(( $num_ifaces - 1 ))
     # if we have 2 ethernet dongles, lo, )
-    if [[ $num_ifaces = 3 ]] ; then
-        mac=`ifconfig | gawk 'BEGIN { eth="";} (/^.*: flags=/) {eth = $1;} 
-            /^ *ether / { if (eth == "eth2:") print( $2);}'`
-        write_nm_connection "dhcp" "$mac" "eth2"
-    fi
-
     if [[ $num_ifaces  > 1 ]]; then
         mac=`ifconfig | gawk 'BEGIN { eth="";} (/^.*: flags=/) {eth = $1;} 
             /^ *ether / { if (eth == "eth1:") print( $2);}'`
         write_nm_connection "static" "$mac" "eth1"
         ipaddr=172.18.96.1
     fi
+
+    if [[ $num_ifaces = 3 ]] ; then
+        mac=`ifconfig | gawk 'BEGIN { eth="";} (/^.*: flags=/) {eth = $1;} 
+            /^ *ether / { if (eth == "eth2:") print( $2);}'`
+        write_nm_connection "dhcp" "$mac" "eth2"
+	echo "eth2" > /etc/sysconfig/xs_wan_device
+    else 
+	echo "eth0" > /etc/sysconfig/xs_wan_device 	
+    fi
+
     if [[ $num_ifaces  = 1 ]]; then
         ipaddr=ifconfig eth0| awk -F ' *|:' '/inet addr/{print $4}'
+	etckeeper commit -m "Single network interface found"
     fi
 else
     mac=`ifconfig | gawk 'BEGIN { eth="";} (/^.*: flags=/) {eth = $1;} 
@@ -77,25 +86,7 @@ else
     write_nm_connection "dhcp" "$mac" "eth1"   
 fi
 
-## Prepare config files
-CFG_TEMPLATES="sysconfig/dhcpd sysconfig/iptables-config sysconfig/ip6tables-config"
-pushd /etc
-for i in $CFG_TEMPLATES; do
-	cp -p $i.in $i
-	#etckeeper commit -m "Made from $i.in"
-done
-#etckeeper commit -m "Made from $i.in"
-popd
-
-#etckeeper commit -m "xs-setup-network configured services"
-
-systemctl stop NetworkManager.service
-
-# must re-run domain-config as some domain-config parts change behaviour
-# depending on whether we are running the standard XS network config or not
-xs-domain-config
-
-CONFIG_LIST="/etc/hosts"
+etckeeper commit -m "xs-setup-network configured services"
 
 #  This is the suffix which original versions of modified files will have
 BACKUP_SUFFIX=old
@@ -103,13 +94,15 @@ BACKUP_SUFFIX=old
 short_host=`hostname -s`
 new_name=`hostname -f`
 
+systemctl stop NetworkManager.service
+
 for config in $CONFIG_LIST;
 do
     if [ -e $config.in ]; then
 	if [ -e $config ]; then
-	    cp $config $config.$BACKUP_SUFFIX
+	    cp $config $config.$BACKUP_SUFFIX ;
 	fi
-	cp $config.in $config.tmp
+	cp $config.in $config.tmp ;
 	sed -i -e s/@@BASEDNSNAME2@@/$new_name/ $config.tmp ;
 	sed -i -e s/@@BASEDNSNAME3@@/$short_host/ $config.tmp ;
 	sed -i -e s/@@IPADDR@@/$ipaddr/ $config.tmp ;
@@ -120,10 +113,19 @@ do
     fi
 done
 
+etckeeper commit -m "set /etc/hosts to $ipaddr $new_name $short_host"
+echo "XS standard networking configured"
+popd
 systemctl start NetworkManager.service
 sleep 5
-systemctl enable iptables.service
-systemctl enable ip6tables.service
-systemctl start iptables.service
-systemctl start ip6tables.service
-echo "XS standard networking configured"
+
+if [[ $num_ifaces = 1 ]]; then 
+    exit 0
+fi
+
+source /usr/bin/xs-setup-functions
+dhcpd yes
+named yes
+squid yes
+gateway yes
+
diff --git a/xs-config.spec.in b/xs-config.spec.in
index ff661ed..57001fe 100644
--- a/xs-config.spec.in
+++ b/xs-config.spec.in
@@ -7,23 +7,23 @@ BuildArch: noarch
 #  a list of packages modified by xs-config
 Requires: python
 Requires: authconfig
-#Requires: bind
-Requires: initscripts
-Requires: iptables
-Requires: module-init-tools
-Requires: nscd
+#Requires: bind  
+Requires: initscripts  
+Requires: iptables  
+Requires: module-init-tools  
+Requires: nscd  
 Requires: nss
 Requires: ntp
-Requires: openssh-server
-Requires: radvd
-Requires: rpm
+Requires: openssh-server  
+Requires: radvd  
+Requires: rpm  
 Requires: selinux-policy
-Requires: setup
-Requires: smartmontools
-Requires: sudo
-Requires: syslog
+Requires: setup  
+Requires: smartmontools  
+Requires: sudo  
+Requires: syslog 
 Requires: logrotate
-Requires: xml-common
+Requires: xml-common  
 Requires: etckeeper
 Requires: make
 Requires: usbmount
@@ -46,8 +46,8 @@ Requires(post): coreutils
 
 Summary: XS/XSX default configuration
 Name: xs-config
-Version: @VERSION@
-Release: 1
+Version:  @VERSION@
+Release: 4
 BuildRoot: %{_builddir}/%{name}-root
 Distribution: OLPC XS/XSX School Server
 Group: Base System/Administration Tools
@@ -128,8 +128,8 @@ fi
 %config(noreplace) %{_sysconfdir}/ssh/sshd_config.in
 %config(noreplace) %{_sysconfdir}/sysconfig/*.in
 %config(noreplace) %{_sysconfdir}/sysconfig/ejabberd-xs
-%config %{_sysconfdir}/sysconfig/olpc-scripts/iptables-xs.in
-%config %{_sysconfdir}/sysconfig/olpc-scripts/ip6tables-xs.in
+%config %{_sysconfdir}/sysconfig/olpc-scripts/iptables.in
+%config %{_sysconfdir}/sysconfig/olpc-scripts/ip6tables.in
 %config %{_sysconfdir}/sysconfig/olpc-scripts/firewall-xs.in
 
 %attr(750, root , named)   %dir /var/named-xs
@@ -151,7 +151,6 @@ fi
 %{_libexecdir}/moodle-xs-init
 %doc README README.networking
 %doc README.no-fsck-questions
-%{_sysconfdir}/pki/CA/newcerts/admin/self.pem
 
 %files xo
 %{_bindir}/bootstrap-xo
